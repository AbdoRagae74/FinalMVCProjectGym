// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
#nullable disable
using Microsoft.AspNetCore.Identity;
using Microsoft.AspNetCore.Identity.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore;
using System;
using System.Collections.Generic;

namespace GymManagementSystem.Models;

public partial class GymManagementContext : IdentityDbContext<ApplicationUser>
{
    public GymManagementContext()
    {
    }

    public GymManagementContext(DbContextOptions<GymManagementContext> options)
        : base(options)
    {
    }

    public virtual DbSet<Class> Classes { get; set; }

    public virtual DbSet<Coach> Coaches { get; set; }

    public virtual DbSet<DietPlan> DietPlans { get; set; }

    public virtual DbSet<InBodyTest> InBodyTests { get; set; }

    public virtual DbSet<MembershipType> MembershipTypes { get; set; }

    public virtual DbSet<Trainee> Trainees { get; set; }

    public virtual DbSet<WorkOutProgram> WorkOutPrograms { get; set; }

    protected override void OnModelCreating(ModelBuilder modelBuilder)
    {
        base.OnModelCreating(modelBuilder);

        // Configure Identity entities
        modelBuilder.Entity<IdentityUserLogin<string>>()
            .HasKey(l => new { l.LoginProvider, l.ProviderKey });

        // Seed Coaches
        modelBuilder.Entity<Coach>().HasData(
            new Coach
            {
                ID = 1,
                FullName = "John Smith",
                Email = "john.smith@gym.com",
                Gender = "M",
                PhoneNumber = "555-0101",
                Specialization = "Weight Training",
                HireDate = new DateOnly(2021, 6, 15),
                Salary = 4500.00m,
                Experience = 5,
                Image = "john_smith.jpg",
                Certification = "ACSM Certified Personal Trainer"
            },
            new Coach
            {
                ID = 2,
                FullName = "Sarah Johnson",
                Email = "sarah.johnson@gym.com",
                Gender = "F",
                PhoneNumber = "555-0102",
                Specialization = "Yoga & Pilates",
                HireDate = new DateOnly(2022, 3, 10),
                Salary = 4200.00m,
                Experience = 4,
                Image = "sarah_johnson.jpg",
                Certification = "RYT-500 Yoga Alliance"
            },
            new Coach
            {
                ID = 3,
                FullName = "Mike Wilson",
                Email = "mike.wilson@gym.com",
                Gender = "M",
                PhoneNumber = "555-0103",
                Specialization = "CrossFit",
                HireDate = new DateOnly(2023, 1, 20),
                Salary = 4800.00m,
                Experience = 6,
                Image = "mike_wilson.jpg",
                Certification = "CrossFit Level 2 Trainer"
            },
            new Coach
            {
                ID = 4,
                FullName = "Emily Davis",
                Email = "emily.davis@gym.com",
                Gender = "F",
                PhoneNumber = "555-0104",
                Specialization = "Cardio & HIIT",
                HireDate = new DateOnly(2023, 8, 5),
                Salary = 3900.00m,
                Experience = 3,
                Image = "emily_davis.jpg",
                Certification = "NASM Certified Personal Trainer"
            },
            new Coach
            {
                ID = 5,
                FullName = "David Brown",
                Email = "david.brown@gym.com",
                Gender = "M",
                PhoneNumber = "555-0105",
                Specialization = "Nutrition & Wellness",
                HireDate = new DateOnly(2022, 11, 12),
                Salary = 4300.00m,
                Experience = 7,
                Image = "david_brown.jpg",
                Certification = "Precision Nutrition Level 1"
            }
        );

        // Seed Diet Plans
        modelBuilder.Entity<DietPlan>().HasData(
            new DietPlan
            {
                ID = 1,
                Title = "Weight Loss Plan",
                Description = "Low calorie diet plan focused on healthy weight loss with balanced nutrition",
                CreatedAt = new DateTime(2024, 1, 15, 10, 0, 0)
            },
            new DietPlan
            {
                ID = 2,
                Title = "Muscle Building Plan",
                Description = "High protein diet plan designed to support muscle growth and recovery",
                CreatedAt = new DateTime(2024, 1, 20, 14, 30, 0)
            },
            new DietPlan
            {
                ID = 3,
                Title = "Maintenance Plan",
                Description = "Balanced diet plan for maintaining current weight and overall health",
                CreatedAt = new DateTime(2024, 2, 1, 9, 15, 0)
            },
            new DietPlan
            {
                ID = 4,
                Title = "Keto Diet Plan",
                Description = "Low carb, high fat ketogenic diet plan for rapid weight loss",
                CreatedAt = new DateTime(2024, 2, 10, 16, 45, 0)
            },
            new DietPlan
            {
                ID = 5,
                Title = "Vegetarian Plan",
                Description = "Plant-based diet plan rich in nutrients and suitable for vegetarians",
                CreatedAt = new DateTime(2024, 2, 15, 11, 20, 0)
            }
        );

        // Seed Workout Programs
        modelBuilder.Entity<WorkOutProgram>().HasData(
            new WorkOutProgram
            {
                ID = 1,
                Name = "Beginner Strength Training",
                Description = "A comprehensive strength training program for beginners focusing on fundamental movements",
                CoachID = 1
            },
            new WorkOutProgram
            {
                ID = 2,
                Name = "Advanced Powerlifting",
                Description = "High-intensity powerlifting program for experienced lifters",
                CoachID = 1
            },
            new WorkOutProgram
            {
                ID = 3,
                Name = "Yoga Flow",
                Description = "Dynamic yoga sequences for flexibility and mindfulness",
                CoachID = 2
            },
            new WorkOutProgram
            {
                ID = 4,
                Name = "Hatha Yoga",
                Description = "Traditional hatha yoga practice for beginners and intermediate practitioners",
                CoachID = 2
            },
            new WorkOutProgram
            {
                ID = 5,
                Name = "CrossFit WOD",
                Description = "Daily varying functional fitness workouts",
                CoachID = 3
            },
            new WorkOutProgram
            {
                ID = 6,
                Name = "HIIT Cardio",
                Description = "High-intensity interval training for cardiovascular fitness",
                CoachID = 4
            },
            new WorkOutProgram
            {
                ID = 7,
                Name = "Functional Fitness",
                Description = "Functional movement patterns for everyday activities",
                CoachID = 5
            }
        );

        // Seed Membership Types
        modelBuilder.Entity<MembershipType>().HasData(
            new MembershipType
            {
                ID = 1,
                Name = "Basic Monthly",
                Price = 49.99m,
                Duration = 30
            },
            new MembershipType
            {
                ID = 2,
                Name = "Premium Monthly",
                Price = 79.99m,
                Duration = 30
            },
            new MembershipType
            {
                ID = 3,
                Name = "Basic Annual",
                Price = 499.99m,
                Duration = 365
            },
            new MembershipType
            {
                ID = 4,
                Name = "Premium Annual",
                Price = 799.99m,
                Duration = 365
            },
            new MembershipType
            {
                ID = 5,
                Name = "Student Monthly",
                Price = 34.99m,
                Duration = 30
            },
            new MembershipType
            {
                ID = 6,
                Name = "Senior Monthly",
                Price = 39.99m,
                Duration = 30
            }
        );

        // Seed Classes
        modelBuilder.Entity<Class>().HasData(
            new Class
            {
                ID = 1,
                Name = "Morning Strength",
                Description = "Early morning strength training session",
                Capacity = 15,
                StartDate = new DateOnly(2024, 3, 1),
                EndDate = new DateOnly(2024, 5, 31),
                DayOfWeek = "Monday",
                Image = "morning_strength.jpg",
                ProgramID = 1
            },
            new Class
            {
                ID = 2,
                Name = "Evening Powerlifting",
                Description = "Advanced powerlifting class for experienced members",
                Capacity = 10,
                StartDate = new DateOnly(2024, 3, 1),
                EndDate = new DateOnly(2024, 5, 31),
                DayOfWeek = "Wednesday",
                Image = "powerlifting.jpg",
                ProgramID = 2
            },
            new Class
            {
                ID = 3,
                Name = "Sunrise Yoga",
                Description = "Peaceful morning yoga session",
                Capacity = 20,
                StartDate = new DateOnly(2024, 3, 1),
                EndDate = new DateOnly(2024, 5, 31),
                DayOfWeek = "Tuesday",
                Image = "sunrise_yoga.jpg",
                ProgramID = 3
            },
            new Class
            {
                ID = 4,
                Name = "Beginner Yoga",
                Description = "Gentle yoga class for beginners",
                Capacity = 25,
                StartDate = new DateOnly(2024, 3, 1),
                EndDate = new DateOnly(2024, 5, 31),
                DayOfWeek = "Thursday",
                Image = "beginner_yoga.jpg",
                ProgramID = 4
            },
            new Class
            {
                ID = 5,
                Name = "CrossFit Challenge",
                Description = "High-intensity CrossFit workout",
                Capacity = 12,
                StartDate = new DateOnly(2024, 3, 1),
                EndDate = new DateOnly(2024, 5, 31),
                DayOfWeek = "Friday",
                Image = "crossfit.jpg",
                ProgramID = 5
            },
            new Class
            {
                ID = 6,
                Name = "HIIT Bootcamp",
                Description = "High-intensity interval training bootcamp",
                Capacity = 18,
                StartDate = new DateOnly(2024, 3, 1),
                EndDate = new DateOnly(2024, 5, 31),
                DayOfWeek = "Saturday",
                Image = "hiit_bootcamp.jpg",
                ProgramID = 6
            },
            new Class
            {
                ID = 7,
                Name = "Functional Training",
                Description = "Functional movement and mobility class",
                Capacity = 16,
                StartDate = new DateOnly(2024, 3, 1),
                EndDate = new DateOnly(2024, 5, 31),
                DayOfWeek = "Sunday",
                Image = "functional.jpg",
                ProgramID = 7
            }
        );

        // Seed Trainees
        modelBuilder.Entity<Trainee>().HasData(
            new Trainee
            {
                ID = 1,
                FullName = "Alice Cooper",
                Phone = "555-1001",
                Email = "alice.cooper@email.com",
                Gender = "F",
                JoinDate = new DateOnly(2024, 1, 15),
                DOB = new DateOnly(1990, 5, 20),
                MembershipTypeID = 2,
                DietPlanID = 1,
                ClassID = 1,
                CoachID = 1
            },
            new Trainee
            {
                ID = 2,
                FullName = "Bob Wilson",
                Phone = "555-1002",
                Email = "bob.wilson@email.com",
                Gender = "M",
                JoinDate = new DateOnly(2024, 1, 20),
                DOB = new DateOnly(1985, 8, 14),
                MembershipTypeID = 4,
                DietPlanID = 2,
                ClassID = 2,
                CoachID = 1
            },
            new Trainee
            {
                ID = 3,
                FullName = "Carol Martinez",
                Phone = "555-1003",
                Email = "carol.martinez@email.com",
                Gender = "F",
                JoinDate = new DateOnly(2024, 2, 1),
                DOB = new DateOnly(1992, 11, 8),
                MembershipTypeID = 1,
                DietPlanID = 3,
                ClassID = 3,
                CoachID = 2
            },
            new Trainee
            {
                ID = 4,
                FullName = "David Lee",
                Phone = "555-1004",
                Email = "david.lee@email.com",
                Gender = "M",
                JoinDate = new DateOnly(2024, 2, 5),
                DOB = new DateOnly(1988, 3, 25),
                MembershipTypeID = 3,
                DietPlanID = 4,
                ClassID = 4,
                CoachID = 2
            },
            new Trainee
            {
                ID = 5,
                FullName = "Emma Thompson",
                Phone = "555-1005",
                Email = "emma.thompson@email.com",
                Gender = "F",
                JoinDate = new DateOnly(2024, 2, 10),
                DOB = new DateOnly(1995, 7, 12),
                MembershipTypeID = 5,
                DietPlanID = 5,
                ClassID = 5,
                CoachID = 3
            },
            new Trainee
            {
                ID = 6,
                FullName = "Frank Garcia",
                Phone = "555-1006",
                Email = "frank.garcia@email.com",
                Gender = "M",
                JoinDate = new DateOnly(2024, 2, 15),
                DOB = new DateOnly(1987, 12, 3),
                MembershipTypeID = 2,
                DietPlanID = 1,
                ClassID = 6,
                CoachID = 4
            },
            new Trainee
            {
                ID = 7,
                FullName = "Grace Kim",
                Phone = "555-1007",
                Email = "grace.kim@email.com",
                Gender = "F",
                JoinDate = new DateOnly(2024, 2, 20),
                DOB = new DateOnly(1993, 4, 18),
                MembershipTypeID = 6,
                DietPlanID = 3,
                ClassID = 7,
                CoachID = 5
            },
            new Trainee
            {
                ID = 8,
                FullName = "Henry Rodriguez",
                Phone = "555-1008",
                Email = "henry.rodriguez@email.com",
                Gender = "M",
                JoinDate = new DateOnly(2024, 3, 1),
                DOB = new DateOnly(1991, 9, 7),
                MembershipTypeID = 1,
                DietPlanID = 2,
                ClassID = 1,
                CoachID = 1
            },
            new Trainee
            {
                ID = 9,
                FullName = "Isabel Chen",
                Phone = "555-1009",
                Email = "isabel.chen@email.com",
                Gender = "F",
                JoinDate = new DateOnly(2024, 3, 5),
                DOB = new DateOnly(1989, 6, 22),
                MembershipTypeID = 4,
                DietPlanID = 4,
                ClassID = 3,
                CoachID = 2
            },
            new Trainee
            {
                ID = 10,
                FullName = "Jack Anderson",
                Phone = "555-1010",
                Email = "jack.anderson@email.com",
                Gender = "M",
                JoinDate = new DateOnly(2024, 3, 10),
                DOB = new DateOnly(1986, 10, 15),
                MembershipTypeID = 3,
                DietPlanID = 5,
                ClassID = 5,
                CoachID = 3
            }
        );

        // Seed InBody Tests
        modelBuilder.Entity<InBodyTest>().HasData(
            new InBodyTest
            {
                ID = 1,
                Date = new DateOnly(2024, 1, 20),
                Height = 165.50m,
                Weight = 70.20m,
                Fats = 22.50m,
                MuscleMass = 45.80m,
                Notes = "Initial assessment - good starting point",
                TraineeID = 1
            },
            new InBodyTest
            {
                ID = 2,
                Date = new DateOnly(2024, 1, 25),
                Height = 180.00m,
                Weight = 85.50m,
                Fats = 18.20m,
                MuscleMass = 62.30m,
                Notes = "Experienced lifter - focus on cutting phase",
                TraineeID = 2
            },
            new InBodyTest
            {
                ID = 3,
                Date = new DateOnly(2024, 2, 5),
                Height = 160.00m,
                Weight = 58.70m,
                Fats = 25.10m,
                MuscleMass = 38.40m,
                Notes = "Beginner - focus on building strength",
                TraineeID = 3
            },
            new InBodyTest
            {
                ID = 4,
                Date = new DateOnly(2024, 2, 10),
                Height = 175.20m,
                Weight = 78.90m,
                Fats = 15.80m,
                MuscleMass = 58.20m,
                Notes = "Athletic build - maintenance phase",
                TraineeID = 4
            },
            new InBodyTest
            {
                ID = 5,
                Date = new DateOnly(2024, 2, 15),
                Height = 168.00m,
                Weight = 64.30m,
                Fats = 20.40m,
                MuscleMass = 42.10m,
                Notes = "Young trainee - focus on form and technique",
                TraineeID = 5
            },
            new InBodyTest
            {
                ID = 6,
                Date = new DateOnly(2024, 3, 15),
                Height = 165.50m,
                Weight = 68.80m,
                Fats = 20.10m,
                MuscleMass = 47.20m,
                Notes = "Progress check - lost 1.4kg fat, gained 1.4kg muscle",
                TraineeID = 1
            },
            new InBodyTest
            {
                ID = 7,
                Date = new DateOnly(2024, 3, 20),
                Height = 180.00m,
                Weight = 83.20m,
                Fats = 16.80m,
                MuscleMass = 63.10m,
                Notes = "Cutting phase progress - lost 2.3kg, maintained muscle",
                TraineeID = 2
            }
        );
    }

//    protected override void OnConfiguring(DbContextOptionsBuilder optionsBuilder)
//#warning To protect potentially sensitive information in your connection string, you should move it out of source code. You can avoid scaffolding the connection string by using the Name= syntax to read it from configuration - see https://go.microsoft.com/fwlink/?linkid=2131148. For more guidance on storing connection strings, see https://go.microsoft.com/fwlink/?LinkId=723263.
//        => optionsBuilder.UseSqlServer("Data Source=DESKTOP-FPIMC2H\\SQLEXPRESS;Initial Catalog=GymManagement;Integrated Security=True");

        //protected override void OnModelCreating(ModelBuilder modelBuilder)
        //{
        //    base.OnModelCreating(modelBuilder);

        //    modelBuilder.Entity<IdentityUserLogin<string>>()
        //        .HasKey(l => new { l.LoginProvider, l.ProviderKey });
        //    //modelBuilder.Entity<Class>(entity =>
        //    //{
        //    //    entity.HasKey(e => e.ID).HasName("PK__Class__3214EC279EF0D6B6");

        //    //    entity.HasIndex(e => e.ProgramID, "IDX_Class_Program");

        //    //    entity.Property(e => e.DayOfWeek).HasMaxLength(20);
        //    //    entity.Property(e => e.Description).HasMaxLength(500);
        //    //    entity.Property(e => e.Image).HasMaxLength(255);
        //    //    entity.Property(e => e.Name)
        //    //        .IsRequired()
        //    //        .HasMaxLength(100);

        //    //    entity.HasOne(d => d.Program).WithMany(p => p.Classes)
        //    //        .HasForeignKey(d => d.ProgramID)
        //    //        .HasConstraintName("FK__Class__ProgramID__44FF419A");
        //    //});

        //    //modelBuilder.Entity<Coach>(entity =>
        //    //{
        //    //    entity.HasKey(e => e.ID).HasName("PK__Coach__3214EC27AC46CA0E");

        //    //    entity.ToTable("Coach");

        //    //    entity.Property(e => e.Certification).HasMaxLength(200);
        //    //    entity.Property(e => e.FullName)
        //    //        .IsRequired()
        //    //        .HasMaxLength(100);
        //    //    entity.Property(e => e.Image).HasMaxLength(255);
        //    //    entity.Property(e => e.PhoneNumber).HasMaxLength(20);
        //    //    entity.Property(e => e.Salary).HasColumnType("decimal(10, 2)");
        //    //    entity.Property(e => e.Specialization).HasMaxLength(100);
        //    //});

        //    //modelBuilder.Entity<DietPlan>(entity =>
        //    //{
        //    //    entity.HasKey(e => e.ID).HasName("PK__DietPlan__3214EC2727E6130F");

        //    //    entity.ToTable("DietPlan");

        //    //    entity.Property(e => e.CreatedAt)
        //    //        .HasDefaultValueSql("(getdate())")
        //    //        .HasColumnType("datetime");
        //    //    entity.Property(e => e.Description).HasMaxLength(500);
        //    //    entity.Property(e => e.Title)
        //    //        .IsRequired()
        //    //        .HasMaxLength(100);
        //    //});

        //    //modelBuilder.Entity<InBodyTest>(entity =>
        //    //{
        //    //    entity.HasKey(e => e.ID).HasName("PK__InBodyTe__3214EC273F6719C6");

        //    //    entity.ToTable("InBodyTest");

        //    //    entity.HasIndex(e => e.TraineeID, "IDX_InBodyTest_Trainee");

        //    //    entity.Property(e => e.Date).HasDefaultValueSql("(CONVERT([date],getdate()))");
        //    //    entity.Property(e => e.Fats).HasColumnType("decimal(5, 2)");
        //    //    entity.Property(e => e.Height).HasColumnType("decimal(5, 2)");
        //    //    entity.Property(e => e.MuscleMass).HasColumnType("decimal(5, 2)");
        //    //    entity.Property(e => e.Notes).HasMaxLength(500);
        //    //    entity.Property(e => e.Weight).HasColumnType("decimal(5, 2)");

        //    //    entity.HasOne(d => d.Trainee).WithMany(p => p.InBodyTests)
        //    //        .HasForeignKey(d => d.TraineeID)
        //    //        .HasConstraintName("FK__InBodyTes__Train__48CFD27E");
        //    //});

        //    //modelBuilder.Entity<MembershipType>(entity =>
        //    //{
        //    //    entity.HasKey(e => e.ID).HasName("PK__Membersh__3214EC27A1C99DD9");

        //    //    entity.ToTable("MembershipType");

        //    //    entity.Property(e => e.Name)
        //    //        .IsRequired()
        //    //        .HasMaxLength(50);
        //    //    entity.Property(e => e.Price).HasColumnType("decimal(10, 2)");
        //    //});

        //    //modelBuilder.Entity<Trainee>(entity =>
        //    //{
        //    //    entity.HasKey(e => e.ID).HasName("PK__Trainee__3214EC279E231CF1");

        //    //    entity.ToTable("Trainee");

        //    //    entity.HasIndex(e => e.ClassID, "IDX_Trainee_Class");

        //    //    entity.HasIndex(e => e.CoachID, "IDX_Trainee_Coach");

        //    //    entity.HasIndex(e => e.DietPlanID, "IDX_Trainee_DietPlan");

        //    //    entity.HasIndex(e => e.MembershipTypeID, "IDX_Trainee_MembershipType");

        //    //    entity.Property(e => e.Email).HasMaxLength(100);
        //    //    entity.Property(e => e.FullName)
        //    //        .IsRequired()
        //    //        .HasMaxLength(100);
        //    //    entity.Property(e => e.Gender)
        //    //        .HasMaxLength(1)
        //    //        .IsUnicode(false)
        //    //        .IsFixedLength();
        //    //    entity.Property(e => e.JoinDate).HasDefaultValueSql("(CONVERT([date],getdate()))");
        //    //    entity.Property(e => e.Phone).HasMaxLength(20);

        //    //    entity.HasOne(d => d.Class).WithMany(p => p.Trainees)
        //    //        .HasForeignKey(d => d.ClassID)
        //    //        .HasConstraintName("FK__Trainee__ClassID__4AB81AF0");

        //    //    entity.HasOne(d => d.Coach).WithMany(p => p.Trainees)
        //    //        .HasForeignKey(d => d.CoachID)
        //    //        .HasConstraintName("FK__Trainee__CoachID__4BAC3F29");

        //    //    entity.HasOne(d => d.DietPlan).WithMany(p => p.Trainees)
        //    //        .HasForeignKey(d => d.DietPlanID)
        //    //        .HasConstraintName("FK__Trainee__DietPla__49C3F6B7");

        //    //    entity.HasOne(d => d.MembershipType).WithMany(p => p.Trainees)
        //    //        .HasForeignKey(d => d.MembershipTypeID)
        //    //        .HasConstraintName("FK__Trainee__Members__3F466844");
        //    //});

        //    //modelBuilder.Entity<WorkOutProgram>(entity =>
        //    //{
        //    //    entity.HasKey(e => e.ID).HasName("PK__Program__3214EC275666752F");

        //    //    entity.ToTable("WorkOutProgram");

        //    //    entity.HasIndex(e => e.CoachID, "IDX_Program_Coach");

        //    //    entity.Property(e => e.Description).HasMaxLength(500);
        //    //    entity.Property(e => e.Name)
        //    //        .IsRequired()
        //    //        .HasMaxLength(100);

        //    //    entity.HasOne(d => d.Coach).WithMany(p => p.WorkOutPrograms)
        //    //        .HasForeignKey(d => d.CoachID)
        //    //        .HasConstraintName("FK__Program__CoachID__4222D4EF");
        //    //});

        //    //OnModelCreatingPartial(modelBuilder);
        //}

    partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
}