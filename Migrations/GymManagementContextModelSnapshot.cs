// <auto-generated />
using System;
using GymManagementSystem.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GymManagementSystem.Migrations
{
    [DbContext(typeof(GymManagementContext))]
    partial class GymManagementContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GymManagementSystem.Models.ApplicationUser", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnType("int");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DisplayName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("bit");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("NormalizedEmail")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedUserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("PasswordHash")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedEmail")
                        .HasDatabaseName("EmailIndex");

                    b.HasIndex("NormalizedUserName")
                        .IsUnique()
                        .HasDatabaseName("UserNameIndex")
                        .HasFilter("[NormalizedUserName] IS NOT NULL");

                    b.ToTable("AspNetUsers", (string)null);
                });

            modelBuilder.Entity("GymManagementSystem.Models.Class", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("DayOfWeek")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<DateOnly?>("EndDate")
                        .HasColumnType("date");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int?>("ProgramID")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("StartDate")
                        .HasColumnType("date");

                    b.HasKey("ID");

                    b.HasIndex(new[] { "ProgramID" }, "IDX_Class_Program");

                    b.ToTable("Class");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Capacity = 15,
                            DayOfWeek = "Monday",
                            Description = "Early morning strength training session",
                            EndDate = new DateOnly(2024, 5, 31),
                            Image = "morning_strength.jpg",
                            Name = "Morning Strength",
                            ProgramID = 1,
                            StartDate = new DateOnly(2024, 3, 1)
                        },
                        new
                        {
                            ID = 2,
                            Capacity = 10,
                            DayOfWeek = "Wednesday",
                            Description = "Advanced powerlifting class for experienced members",
                            EndDate = new DateOnly(2024, 5, 31),
                            Image = "powerlifting.jpg",
                            Name = "Evening Powerlifting",
                            ProgramID = 2,
                            StartDate = new DateOnly(2024, 3, 1)
                        },
                        new
                        {
                            ID = 3,
                            Capacity = 20,
                            DayOfWeek = "Tuesday",
                            Description = "Peaceful morning yoga session",
                            EndDate = new DateOnly(2024, 5, 31),
                            Image = "sunrise_yoga.jpg",
                            Name = "Sunrise Yoga",
                            ProgramID = 3,
                            StartDate = new DateOnly(2024, 3, 1)
                        },
                        new
                        {
                            ID = 4,
                            Capacity = 25,
                            DayOfWeek = "Thursday",
                            Description = "Gentle yoga class for beginners",
                            EndDate = new DateOnly(2024, 5, 31),
                            Image = "beginner_yoga.jpg",
                            Name = "Beginner Yoga",
                            ProgramID = 4,
                            StartDate = new DateOnly(2024, 3, 1)
                        },
                        new
                        {
                            ID = 5,
                            Capacity = 12,
                            DayOfWeek = "Friday",
                            Description = "High-intensity CrossFit workout",
                            EndDate = new DateOnly(2024, 5, 31),
                            Image = "crossfit.jpg",
                            Name = "CrossFit Challenge",
                            ProgramID = 5,
                            StartDate = new DateOnly(2024, 3, 1)
                        },
                        new
                        {
                            ID = 6,
                            Capacity = 18,
                            DayOfWeek = "Saturday",
                            Description = "High-intensity interval training bootcamp",
                            EndDate = new DateOnly(2024, 5, 31),
                            Image = "hiit_bootcamp.jpg",
                            Name = "HIIT Bootcamp",
                            ProgramID = 6,
                            StartDate = new DateOnly(2024, 3, 1)
                        },
                        new
                        {
                            ID = 7,
                            Capacity = 16,
                            DayOfWeek = "Sunday",
                            Description = "Functional movement and mobility class",
                            EndDate = new DateOnly(2024, 5, 31),
                            Image = "functional.jpg",
                            Name = "Functional Training",
                            ProgramID = 7,
                            StartDate = new DateOnly(2024, 3, 1)
                        });
                });

            modelBuilder.Entity("GymManagementSystem.Models.Coach", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<string>("Certification")
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Experience")
                        .HasColumnType("int");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<DateOnly?>("HireDate")
                        .HasColumnType("date");

                    b.Property<string>("Image")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("PhoneNumber")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<decimal?>("Salary")
                        .HasColumnType("decimal(10, 2)");

                    b.Property<string>("Specialization")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("Coach");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Certification = "ACSM Certified Personal Trainer",
                            Email = "john.smith@gym.com",
                            Experience = 5,
                            FullName = "John Smith",
                            Gender = "M",
                            HireDate = new DateOnly(2021, 6, 15),
                            Image = "john_smith.jpg",
                            PhoneNumber = "555-0101",
                            Salary = 4500.00m,
                            Specialization = "Weight Training"
                        },
                        new
                        {
                            ID = 2,
                            Certification = "RYT-500 Yoga Alliance",
                            Email = "sarah.johnson@gym.com",
                            Experience = 4,
                            FullName = "Sarah Johnson",
                            Gender = "F",
                            HireDate = new DateOnly(2022, 3, 10),
                            Image = "sarah_johnson.jpg",
                            PhoneNumber = "555-0102",
                            Salary = 4200.00m,
                            Specialization = "Yoga & Pilates"
                        },
                        new
                        {
                            ID = 3,
                            Certification = "CrossFit Level 2 Trainer",
                            Email = "mike.wilson@gym.com",
                            Experience = 6,
                            FullName = "Mike Wilson",
                            Gender = "M",
                            HireDate = new DateOnly(2023, 1, 20),
                            Image = "mike_wilson.jpg",
                            PhoneNumber = "555-0103",
                            Salary = 4800.00m,
                            Specialization = "CrossFit"
                        },
                        new
                        {
                            ID = 4,
                            Certification = "NASM Certified Personal Trainer",
                            Email = "emily.davis@gym.com",
                            Experience = 3,
                            FullName = "Emily Davis",
                            Gender = "F",
                            HireDate = new DateOnly(2023, 8, 5),
                            Image = "emily_davis.jpg",
                            PhoneNumber = "555-0104",
                            Salary = 3900.00m,
                            Specialization = "Cardio & HIIT"
                        },
                        new
                        {
                            ID = 5,
                            Certification = "Precision Nutrition Level 1",
                            Email = "david.brown@gym.com",
                            Experience = 7,
                            FullName = "David Brown",
                            Gender = "M",
                            HireDate = new DateOnly(2022, 11, 12),
                            Image = "david_brown.jpg",
                            PhoneNumber = "555-0105",
                            Salary = 4300.00m,
                            Specialization = "Nutrition & Wellness"
                        });
                });

            modelBuilder.Entity("GymManagementSystem.Models.DietPlan", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateTime?>("CreatedAt")
                        .HasColumnType("datetime");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.ToTable("DietPlan");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CreatedAt = new DateTime(2024, 1, 15, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Description = "Low calorie diet plan focused on healthy weight loss with balanced nutrition",
                            Title = "Weight Loss Plan"
                        },
                        new
                        {
                            ID = 2,
                            CreatedAt = new DateTime(2024, 1, 20, 14, 30, 0, 0, DateTimeKind.Unspecified),
                            Description = "High protein diet plan designed to support muscle growth and recovery",
                            Title = "Muscle Building Plan"
                        },
                        new
                        {
                            ID = 3,
                            CreatedAt = new DateTime(2024, 2, 1, 9, 15, 0, 0, DateTimeKind.Unspecified),
                            Description = "Balanced diet plan for maintaining current weight and overall health",
                            Title = "Maintenance Plan"
                        },
                        new
                        {
                            ID = 4,
                            CreatedAt = new DateTime(2024, 2, 10, 16, 45, 0, 0, DateTimeKind.Unspecified),
                            Description = "Low carb, high fat ketogenic diet plan for rapid weight loss",
                            Title = "Keto Diet Plan"
                        },
                        new
                        {
                            ID = 5,
                            CreatedAt = new DateTime(2024, 2, 15, 11, 20, 0, 0, DateTimeKind.Unspecified),
                            Description = "Plant-based diet plan rich in nutrients and suitable for vegetarians",
                            Title = "Vegetarian Plan"
                        });
                });

            modelBuilder.Entity("GymManagementSystem.Models.InBodyTest", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<DateOnly?>("Date")
                        .HasColumnType("date");

                    b.Property<decimal?>("Fats")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("Height")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<decimal?>("MuscleMass")
                        .HasColumnType("decimal(5, 2)");

                    b.Property<string>("Notes")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<int?>("TraineeID")
                        .HasColumnType("int");

                    b.Property<decimal?>("Weight")
                        .HasColumnType("decimal(5, 2)");

                    b.HasKey("ID");

                    b.HasIndex(new[] { "TraineeID" }, "IDX_InBodyTest_Trainee");

                    b.ToTable("InBodyTest");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Date = new DateOnly(2024, 1, 20),
                            Fats = 22.50m,
                            Height = 165.50m,
                            MuscleMass = 45.80m,
                            Notes = "Initial assessment - good starting point",
                            TraineeID = 1,
                            Weight = 70.20m
                        },
                        new
                        {
                            ID = 2,
                            Date = new DateOnly(2024, 1, 25),
                            Fats = 18.20m,
                            Height = 180.00m,
                            MuscleMass = 62.30m,
                            Notes = "Experienced lifter - focus on cutting phase",
                            TraineeID = 2,
                            Weight = 85.50m
                        },
                        new
                        {
                            ID = 3,
                            Date = new DateOnly(2024, 2, 5),
                            Fats = 25.10m,
                            Height = 160.00m,
                            MuscleMass = 38.40m,
                            Notes = "Beginner - focus on building strength",
                            TraineeID = 3,
                            Weight = 58.70m
                        },
                        new
                        {
                            ID = 4,
                            Date = new DateOnly(2024, 2, 10),
                            Fats = 15.80m,
                            Height = 175.20m,
                            MuscleMass = 58.20m,
                            Notes = "Athletic build - maintenance phase",
                            TraineeID = 4,
                            Weight = 78.90m
                        },
                        new
                        {
                            ID = 5,
                            Date = new DateOnly(2024, 2, 15),
                            Fats = 20.40m,
                            Height = 168.00m,
                            MuscleMass = 42.10m,
                            Notes = "Young trainee - focus on form and technique",
                            TraineeID = 5,
                            Weight = 64.30m
                        },
                        new
                        {
                            ID = 6,
                            Date = new DateOnly(2024, 3, 15),
                            Fats = 20.10m,
                            Height = 165.50m,
                            MuscleMass = 47.20m,
                            Notes = "Progress check - lost 1.4kg fat, gained 1.4kg muscle",
                            TraineeID = 1,
                            Weight = 68.80m
                        },
                        new
                        {
                            ID = 7,
                            Date = new DateOnly(2024, 3, 20),
                            Fats = 16.80m,
                            Height = 180.00m,
                            MuscleMass = 63.10m,
                            Notes = "Cutting phase progress - lost 2.3kg, maintained muscle",
                            TraineeID = 2,
                            Weight = 83.20m
                        });
                });

            modelBuilder.Entity("GymManagementSystem.Models.MembershipType", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("Duration")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(10, 2)");

                    b.HasKey("ID");

                    b.ToTable("MembershipType");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            Duration = 30,
                            Name = "Basic Monthly",
                            Price = 49.99m
                        },
                        new
                        {
                            ID = 2,
                            Duration = 30,
                            Name = "Premium Monthly",
                            Price = 79.99m
                        },
                        new
                        {
                            ID = 3,
                            Duration = 365,
                            Name = "Basic Annual",
                            Price = 499.99m
                        },
                        new
                        {
                            ID = 4,
                            Duration = 365,
                            Name = "Premium Annual",
                            Price = 799.99m
                        },
                        new
                        {
                            ID = 5,
                            Duration = 30,
                            Name = "Student Monthly",
                            Price = 34.99m
                        },
                        new
                        {
                            ID = 6,
                            Duration = 30,
                            Name = "Senior Monthly",
                            Price = 39.99m
                        });
                });

            modelBuilder.Entity("GymManagementSystem.Models.Trainee", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int>("ClassID")
                        .HasColumnType("int");

                    b.Property<int>("CoachID")
                        .HasColumnType("int");

                    b.Property<DateOnly?>("DOB")
                        .HasColumnType("date");

                    b.Property<int?>("DietPlanID")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Gender")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("varchar(1)");

                    b.Property<DateOnly?>("JoinDate")
                        .HasColumnType("date");

                    b.Property<int>("MembershipTypeID")
                        .HasColumnType("int");

                    b.Property<string>("Phone")
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.HasKey("ID");

                    b.HasIndex(new[] { "ClassID" }, "IDX_Trainee_Class");

                    b.HasIndex(new[] { "CoachID" }, "IDX_Trainee_Coach");

                    b.HasIndex(new[] { "DietPlanID" }, "IDX_Trainee_DietPlan");

                    b.HasIndex(new[] { "MembershipTypeID" }, "IDX_Trainee_MembershipType");

                    b.ToTable("Trainee");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            ClassID = 1,
                            CoachID = 1,
                            DOB = new DateOnly(1990, 5, 20),
                            DietPlanID = 1,
                            Email = "alice.cooper@email.com",
                            FullName = "Alice Cooper",
                            Gender = "F",
                            JoinDate = new DateOnly(2024, 1, 15),
                            MembershipTypeID = 2,
                            Phone = "555-1001"
                        },
                        new
                        {
                            ID = 2,
                            ClassID = 2,
                            CoachID = 1,
                            DOB = new DateOnly(1985, 8, 14),
                            DietPlanID = 2,
                            Email = "bob.wilson@email.com",
                            FullName = "Bob Wilson",
                            Gender = "M",
                            JoinDate = new DateOnly(2024, 1, 20),
                            MembershipTypeID = 4,
                            Phone = "555-1002"
                        },
                        new
                        {
                            ID = 3,
                            ClassID = 3,
                            CoachID = 2,
                            DOB = new DateOnly(1992, 11, 8),
                            DietPlanID = 3,
                            Email = "carol.martinez@email.com",
                            FullName = "Carol Martinez",
                            Gender = "F",
                            JoinDate = new DateOnly(2024, 2, 1),
                            MembershipTypeID = 1,
                            Phone = "555-1003"
                        },
                        new
                        {
                            ID = 4,
                            ClassID = 4,
                            CoachID = 2,
                            DOB = new DateOnly(1988, 3, 25),
                            DietPlanID = 4,
                            Email = "david.lee@email.com",
                            FullName = "David Lee",
                            Gender = "M",
                            JoinDate = new DateOnly(2024, 2, 5),
                            MembershipTypeID = 3,
                            Phone = "555-1004"
                        },
                        new
                        {
                            ID = 5,
                            ClassID = 5,
                            CoachID = 3,
                            DOB = new DateOnly(1995, 7, 12),
                            DietPlanID = 5,
                            Email = "emma.thompson@email.com",
                            FullName = "Emma Thompson",
                            Gender = "F",
                            JoinDate = new DateOnly(2024, 2, 10),
                            MembershipTypeID = 5,
                            Phone = "555-1005"
                        },
                        new
                        {
                            ID = 6,
                            ClassID = 6,
                            CoachID = 4,
                            DOB = new DateOnly(1987, 12, 3),
                            DietPlanID = 1,
                            Email = "frank.garcia@email.com",
                            FullName = "Frank Garcia",
                            Gender = "M",
                            JoinDate = new DateOnly(2024, 2, 15),
                            MembershipTypeID = 2,
                            Phone = "555-1006"
                        },
                        new
                        {
                            ID = 7,
                            ClassID = 7,
                            CoachID = 5,
                            DOB = new DateOnly(1993, 4, 18),
                            DietPlanID = 3,
                            Email = "grace.kim@email.com",
                            FullName = "Grace Kim",
                            Gender = "F",
                            JoinDate = new DateOnly(2024, 2, 20),
                            MembershipTypeID = 6,
                            Phone = "555-1007"
                        },
                        new
                        {
                            ID = 8,
                            ClassID = 1,
                            CoachID = 1,
                            DOB = new DateOnly(1991, 9, 7),
                            DietPlanID = 2,
                            Email = "henry.rodriguez@email.com",
                            FullName = "Henry Rodriguez",
                            Gender = "M",
                            JoinDate = new DateOnly(2024, 3, 1),
                            MembershipTypeID = 1,
                            Phone = "555-1008"
                        },
                        new
                        {
                            ID = 9,
                            ClassID = 3,
                            CoachID = 2,
                            DOB = new DateOnly(1989, 6, 22),
                            DietPlanID = 4,
                            Email = "isabel.chen@email.com",
                            FullName = "Isabel Chen",
                            Gender = "F",
                            JoinDate = new DateOnly(2024, 3, 5),
                            MembershipTypeID = 4,
                            Phone = "555-1009"
                        },
                        new
                        {
                            ID = 10,
                            ClassID = 5,
                            CoachID = 3,
                            DOB = new DateOnly(1986, 10, 15),
                            DietPlanID = 5,
                            Email = "jack.anderson@email.com",
                            FullName = "Jack Anderson",
                            Gender = "M",
                            JoinDate = new DateOnly(2024, 3, 10),
                            MembershipTypeID = 3,
                            Phone = "555-1010"
                        });
                });

            modelBuilder.Entity("GymManagementSystem.Models.WorkOutProgram", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"));

                    b.Property<int?>("CoachID")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("ID");

                    b.HasIndex(new[] { "CoachID" }, "IDX_Program_Coach");

                    b.ToTable("WorkOutProgram");

                    b.HasData(
                        new
                        {
                            ID = 1,
                            CoachID = 1,
                            Description = "A comprehensive strength training program for beginners focusing on fundamental movements",
                            Name = "Beginner Strength Training"
                        },
                        new
                        {
                            ID = 2,
                            CoachID = 1,
                            Description = "High-intensity powerlifting program for experienced lifters",
                            Name = "Advanced Powerlifting"
                        },
                        new
                        {
                            ID = 3,
                            CoachID = 2,
                            Description = "Dynamic yoga sequences for flexibility and mindfulness",
                            Name = "Yoga Flow"
                        },
                        new
                        {
                            ID = 4,
                            CoachID = 2,
                            Description = "Traditional hatha yoga practice for beginners and intermediate practitioners",
                            Name = "Hatha Yoga"
                        },
                        new
                        {
                            ID = 5,
                            CoachID = 3,
                            Description = "Daily varying functional fitness workouts",
                            Name = "CrossFit WOD"
                        },
                        new
                        {
                            ID = 6,
                            CoachID = 4,
                            Description = "High-intensity interval training for cardiovascular fitness",
                            Name = "HIIT Cardio"
                        },
                        new
                        {
                            ID = 7,
                            CoachID = 5,
                            Description = "Functional movement patterns for everyday activities",
                            Name = "Functional Fitness"
                        });
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRole", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ConcurrencyStamp")
                        .IsConcurrencyToken()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.Property<string>("NormalizedName")
                        .HasMaxLength(256)
                        .HasColumnType("nvarchar(256)");

                    b.HasKey("Id");

                    b.HasIndex("NormalizedName")
                        .IsUnique()
                        .HasDatabaseName("RoleNameIndex")
                        .HasFilter("[NormalizedName] IS NOT NULL");

                    b.ToTable("AspNetRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetRoleClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("ClaimType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClaimValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserClaims", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderKey")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ProviderDisplayName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("AspNetUserLogins", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("RoleId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("UserId", "RoleId");

                    b.HasIndex("RoleId");

                    b.ToTable("AspNetUserRoles", (string)null);
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("LoginProvider")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Value")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("UserId", "LoginProvider", "Name");

                    b.ToTable("AspNetUserTokens", (string)null);
                });

            modelBuilder.Entity("GymManagementSystem.Models.Class", b =>
                {
                    b.HasOne("GymManagementSystem.Models.WorkOutProgram", "Program")
                        .WithMany("Classes")
                        .HasForeignKey("ProgramID");

                    b.Navigation("Program");
                });

            modelBuilder.Entity("GymManagementSystem.Models.InBodyTest", b =>
                {
                    b.HasOne("GymManagementSystem.Models.Trainee", "Trainee")
                        .WithMany("InBodyTests")
                        .HasForeignKey("TraineeID");

                    b.Navigation("Trainee");
                });

            modelBuilder.Entity("GymManagementSystem.Models.Trainee", b =>
                {
                    b.HasOne("GymManagementSystem.Models.Class", "Class")
                        .WithMany("Trainees")
                        .HasForeignKey("ClassID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymManagementSystem.Models.Coach", "Coach")
                        .WithMany("Trainees")
                        .HasForeignKey("CoachID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymManagementSystem.Models.DietPlan", "DietPlan")
                        .WithMany("Trainees")
                        .HasForeignKey("DietPlanID");

                    b.HasOne("GymManagementSystem.Models.MembershipType", "MembershipType")
                        .WithMany("Trainees")
                        .HasForeignKey("MembershipTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Class");

                    b.Navigation("Coach");

                    b.Navigation("DietPlan");

                    b.Navigation("MembershipType");
                });

            modelBuilder.Entity("GymManagementSystem.Models.WorkOutProgram", b =>
                {
                    b.HasOne("GymManagementSystem.Models.Coach", "Coach")
                        .WithMany("WorkOutPrograms")
                        .HasForeignKey("CoachID");

                    b.Navigation("Coach");
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityRoleClaim<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserClaim<string>", b =>
                {
                    b.HasOne("GymManagementSystem.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserLogin<string>", b =>
                {
                    b.HasOne("GymManagementSystem.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserRole<string>", b =>
                {
                    b.HasOne("Microsoft.AspNetCore.Identity.IdentityRole", null)
                        .WithMany()
                        .HasForeignKey("RoleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GymManagementSystem.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Microsoft.AspNetCore.Identity.IdentityUserToken<string>", b =>
                {
                    b.HasOne("GymManagementSystem.Models.ApplicationUser", null)
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GymManagementSystem.Models.Class", b =>
                {
                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("GymManagementSystem.Models.Coach", b =>
                {
                    b.Navigation("Trainees");

                    b.Navigation("WorkOutPrograms");
                });

            modelBuilder.Entity("GymManagementSystem.Models.DietPlan", b =>
                {
                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("GymManagementSystem.Models.MembershipType", b =>
                {
                    b.Navigation("Trainees");
                });

            modelBuilder.Entity("GymManagementSystem.Models.Trainee", b =>
                {
                    b.Navigation("InBodyTests");
                });

            modelBuilder.Entity("GymManagementSystem.Models.WorkOutProgram", b =>
                {
                    b.Navigation("Classes");
                });
#pragma warning restore 612, 618
        }
    }
}
